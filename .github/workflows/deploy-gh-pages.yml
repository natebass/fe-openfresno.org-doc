# Based on the sample workflow for building and deploying a Next.js site to GitHub Pages
#
# To get started with Next.js see: https://nextjs.org/docs/getting-started
#
name: Deploy Storybook Next.js static site to GitHub Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/pnpm-lock.yaml" ]; then
            echo "manager=pnpm" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            echo "runner=pnpm exec" >> $GITHUB_OUTPUT
            exit 0
          elif [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
            exit 0
          elif [ -f "${{ github.workspace }}/package.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            echo "runner=npx --no-install" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "Unable to determine package manager"
            exit 1
          fi

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: 24
          # Enable caching for the detected package manager
          cache: ${{ steps.detect-package-manager.outputs.manager }}
      
      # This is removed due to the MDX configuration failing in next.config.js. It can be renabled if MDX support is removed. This would simplify alot of the custom basepath logic.
      # - name: Setup Pages
      #   uses: actions/configure-pages@v5
      #   with:
      # Automatically inject basePath in your Next.js configuration file and disable
      # server side image optimization (https://nextjs.org/docs/api-reference/next/image#unoptimized).
      #
      # You may remove this line if you want to manage the configuration yourself.
      # static_site_generator: next

      - name: Restore/Save Dependencies Cache
        uses: actions/cache@v4
        with:
          # Use the default cache path for the detected package manager
          path: |
            ${{ steps.detect-package-manager.outputs.manager == 'pnpm' && '**/node_modules' }}
            ${{ steps.detect-package-manager.outputs.manager == 'yarn' && '**/node_modules' }}
            ${{ steps.detect-package-manager.outputs.manager == 'npm' && '~/.npm' }}
          key: ${{ runner.os }}-deps-${{ hashFiles('**/package-lock.json', '**/yarn.lock', '**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-deps-

      - name: Install dependencies
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}
      
      # --- FIX for EEXIST error: Clean the build directory ---
      - name: Clean Storybook Artifact Directory
        run: rm -rf ./storybook-static

      - name: Build with Storybook
        env:
          GITHUB_ACTIONS: true
          GITHUB_REPOSITORY: ${{ github.repository }}
        run: |
          ${{ steps.detect-package-manager.outputs.runner }} storybook build

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v4
        with:
          path: ./storybook-static

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
